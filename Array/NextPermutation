class Solution(object):
	def nextPermutation(self, nums):
		if len(nums) == 1:
			return nums
		for i in range(len(nums) -1,0,-1):
			if nums[i-1] < nums[i]:
				minIndex = i
				for val in range(minIndex+1,len(nums)):
					if nums[val] <= nums[i-1]:
						minIndex = val - 1
						break
					minIndex += 1
				temp = nums[i-1]
				nums[i-1] = nums[minIndex]
				nums[minIndex] = temp
				array1 = nums[i:]
				array1.reverse()
				nums = nums[:i] + array1
				print(nums)
				return nums
		if nums[0] > nums[1]:
			nums.reverse()
		print(nums)
		return nums


object = Solution()
#base case
#object.nextPermutation([1,2,3])

#test 1
#object.nextPermutation([1,3,2])

#test 2 
#object.nextPermutation([1,2,5,4,3,2])

#test3
object.nextPermutation([1,3,2])

#test4
#object.nextPermutation([1,3,2])


